openapi: 3.0.0
info:
  title: Pharmacy API
  version: 0.0.1
servers:
  - url: http://localhost:xxxx/
    description: Dev server
paths:
  /admins/register:
    post:
      summary: Register a new admin
      description: You can register a new admin
      parameters:
        - in: query
          name: register_token
          description: Special token which gives you ability to register a new admin
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/credentials'
      responses:
        '201':
          description: Returns new admin's credentials
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                  admin:
                    $ref: '#/components/schemas/Admin'
        '400':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              example:
                success: false
                error: 'Admin with this login already exists'
        '403':
          description: Forbidden error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              example:
                success: false
                error: 'Invalid token'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /admins/login:
    post:
      summary: Login existing admin
      description: You can login with credentials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/credentials'
      responses:
        '200':
          description: Returns admin's credentials
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                  admin:
                    $ref: '#/components/schemas/Admin'
        '400':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              example:
                success: false
                error: 'Admin with this login not exists'
  /apps:
    get:
      summary: Get authorized admin's apps
      responses:
        '200':
          description: Returns admin's apps
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                  apps:
                    type: array
                    items:
                      $ref: '#/components/schemas/App'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              example:
                success: false
                error: 'Unauthorized'
    post:
      summary: Post new app
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  required: true
                  unique: true
      responses:
        '200':
          description: Returns posted app
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                  app:
                    $ref: '#/components/schemas/App'
        '400':
          description: App name errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              example:
                success: false
                error: 'Provide app name'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              example:
                success: false
                error: 'Unauthorized'
  /apps/{appId}:
    get:
      summary: Get app by ID
      parameters:
        - in: path
          name: appId
          schema:
            type: string
          required: true
          description: Numeric ID of the app to get
      responses:
        '200':
          description: Returns app
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                  app:
                    $ref: '#/components/schemas/App'
              example:
                success: true
                app:
                  _id: 'string'
                  name: 'App name'
                  access_key: 'string'
                  admin_id: 'string'
        '400':
          description: App is not assigned to you
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                error_not_found:
                  summary: App not found
                  value:
                    success: false
                    error: "App not found."
                error_app_is_not_assigned_to_you:
                  summary: App is not assigned to you
                  value:
                    success: false
                    error: "App is not assigned to you."
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              example:
                success: false
                error: 'Unauthorized'
  /medicines:
    get:
      summary: Get medicines by access-key (related to one app)
      parameters:
        - in: header
          name: access-key
          description: app related token
          schema:
            type: string
          required: true
        - in: path
          name: limit
          description: Limit of medicines to get
          schema:
            type: integer
          required: false
        - in: path
          name: skip
          description: How many medicines to skip
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Returns medicines related to one app
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                  medicines:
                    type: array
                    items:
                      $ref: '#/components/schemas/Medicine'
        '400':
          description: Access-key errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              example:
                success: false
                error: 'App with such access key not found'
  /medicines/{medicineId}:
    get:
      summary: Get medicine by ID
      parameters:
        - in: header
          name: access-key
          description: app related token
          schema:
            type: string
          required: true
        - in: path
          name: medicineId
          schema:
            type: string
          required: true
          description: Numeric ID of the medicine to get
      responses:
        '200':
          description: Returns correct medicine
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                  medicine:
                    $ref: '#/components/schemas/Medicine'
        '400':
          description: Access-key errors or if such medicine is not exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              example:
                success: false
                error: 'App with such access key not found'
  /translates/{collection}:
    get:
      summary: Get translates for collection
      parameters:
        - in: header
          name: access-key
          description: app related token
          schema:
            type: string
          required: true
        - in: path
          name: collection
          schema:
            type: string
            enum: [medicinesTypes, medicinesClasses]
          required: true
          description: Collection name
        - in: query
          name: lang
          schema:
            type: string
            enum: [en, ru]
          description: lang to translate
          required: true
      responses:
        '200':
          description: Returns correct translates
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                  collection:
                    type: object
        '400':
          description: Access-key error, lang errors, collection errors 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
              examples:
                error_access_key:
                  summary: App with such access key not found
                  value:
                    success: false
                    error: "App with such access key not found"
                error_lang:
                  summary: Lang errors
                  value:
                    success: false
                    error: "Provide lang query"
                error_collection:
                  summary: Unsupported collection
                  value:
                    success: false
                    error: "Unsupported collection"
components:
  schemas:
    errorResponse:
      type: object
      properties:
        success:
          type: boolean
          default: false
        error:
          type: string
    credentials:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
    Admin:
      type: object
      properties:
        _id:
          type: string
        login:
          type: string
          default: 'test@example.com'
    App:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
          default: 'App name'
        admin_id:
          type: string
    Medicine:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
          default: 'Ambroxol'
        count:
          type: number
        type:
          type: string
          enum: [capsule, tablet, injection, powder, ointment, cream, gel, solution, tincture, suspension, drops, syrup, aerosol, other]
        expiration_date:
          type: string
        description:
          type: string
        class: 
          type: string
          enum: [antibacterial_drugs, hormones, drugs_affecting_immunity, drugs_affecting_metabolism, drugs_affecting_the_psyche, drugs_affecting_blood_clotting, drugs_affecting_vascular_tone, drugs_affecting_the_function_of_the_bronchi, antiparasitic_and_antihelminthic_drugs, drugs_affecting_the_function_of_the_gastrointestinal_tract, drugs_affecting_myocardial_function, drugs_affecting_renal_function, antiviral_drugs, antiinflammatory_and_pain_relievers, antifungal_drugs, antineoplastic_drugs, other]
        app_id:
          type: string
